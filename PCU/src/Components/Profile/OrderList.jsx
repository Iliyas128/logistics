import {useEffect, useState} from "react";
import axios from "axios";
import { Card, Alert, Modal, Button } from "react-bootstrap";

const serviceLabels = {
  insurance: '–°—Ç—Ä–∞—Ö–æ–≤–∫–∞ (+1%)',
  personalDelivery: '–í—Ä—É—á–µ–Ω–∏–µ –ª–∏—á–Ω–æ (+50%)',
  redirection: '–ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—è (+750 —Ç–≥)',
  fragile: '–•—Ä—É–ø–∫–∏–π/–°—Ç–µ–∫–ª–æ (+50%)',
  industrialArea: '–ü—Ä–æ–º–∑–æ–Ω–∞/–ø—Ä–∏–≥–æ—Ä–æ–¥ (+50%)',
  bubbleWrap: '–ü—É–∑—ã—Ä—á–∞—Ç–∞—è –ø–ª–µ–Ω–∫–∞ (600 —Ç–≥/–º¬≤)',
  stretchWrap: '–°—Ç—Ä–µ–π—á –ø–ª–µ–Ω–∫–∞ (250 —Ç–≥/–º¬≤)',
  plywoodBox: '–§–∞–Ω–µ—Ä–Ω—ã–π —è—â–∏–∫ (30 000 —Ç–≥)',
  woodenFrame: '–î–µ—Ä–µ–≤—è–Ω–Ω–∞—è –æ–±—Ä–µ—à–µ—Ç–∫–∞ (18 000 —Ç–≥/–º¬≥)',
  specialPackaging: '–°–ø–µ—Ü. —É–ø–∞–∫–æ–≤–∫–∞',
  addressChange: '–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (750 —Ç–≥)',
  deliveryNoticeOriginal: '–û—Ä–∏–≥–∏–Ω–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (600 —Ç–≥)',
  deliveryNoticeScan: '–°–∫–∞–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (200 —Ç–≥)',
  extraDeliveryAttempt: '–î–æ–ø. –ø–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ (750 —Ç–≥)',
  courierWaitTruck: '–û–∂–∏–¥–∞–Ω–∏–µ –≥—Ä—É–∑–æ–≤–∏–∫–∞ (5500 —Ç–≥)',
  courierWaitCar: '–û–∂–∏–¥–∞–Ω–∏–µ –ª–µ–≥–∫–æ–≤–æ–≥–æ (2000 —Ç–≥)',
};

const OrderList = () =>{
const [ordersList, setOrdersList] = useState([])
const [loading,setLoading] = useState(true)
const [error,setError] = useState('')
const [showDetails, setShowDetails] = useState(false);
const [detailsOrder, setDetailsOrder] = useState(null);

const getOrders = async()=>{
    try{setLoading(true);
        const token = localStorage.getItem('token');
        const response = await axios.get('http://localhost:5000/api/users/orders',{
            headers: {Authorization: `Bearer ${token}`}
        });
        setOrdersList(response.data);
    } catch (err){
        setError(err.response?.data?.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–∫–∞–∑–æ–≤!')
    } finally{
        setLoading(false);
    }
};
useEffect(()=>{
    getOrders()
},[])

const openDetails = (order) => {
  setDetailsOrder(order);
  setShowDetails(true);
};

if (loading) return<div>–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–∫–∞–∑–æ–≤...</div>;
if (error) return <Alert variant="danger">{error}</Alert>;
return (
    <Card className="mb-4 shadow-sm border-0 rounded-4">
      <Card.Body>
        <h4 className="mb-4">üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã</h4>
        {ordersList.length === 0 ? (
          <p className="text-muted">–ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤</p>
        ) : (
          ordersList.map(order => (
            <div key={order._id} className="mb-3 p-3 rounded bg-light" style={{cursor:'pointer'}} onClick={() => openDetails(order)}>
              <div className="d-flex justify-content-between">
                <div>
                  <strong>–ó–∞–∫–∞–∑ ‚Ññ{order.orderNumber}</strong>
                  <p className="mb-1"><small>{order.cargoDescription || '–û–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞'}</small></p>
                  <p className="mb-1"><small>–°—Ç–∞—Ç—É—Å: {order.status}</small></p>
                </div>
                <div className="text-end">
                  <small className="text-muted">
                    {new Date(order.createdAt).toLocaleDateString()}
                  </small>
                </div>
              </div>
            </div>
          ))
        )}
      </Card.Body>
      <Modal show={showDetails} onHide={() => setShowDetails(false)} size="lg" backdrop="static">
        <Modal.Header closeButton><Modal.Title>–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞</Modal.Title></Modal.Header>
        <Modal.Body>
          {detailsOrder && (
            <div>
              <h5>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h5>
              <div><b>–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</b> {detailsOrder.orderNumber}</div>
              <div><b>–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:</b> {detailsOrder.senderCompany} ({detailsOrder.senderContact})</div>
              <div><b>–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</b> {detailsOrder.receiverCompany} ({detailsOrder.receiverContact})</div>
              <div><b>–ì–æ—Ä–æ–¥–∞:</b> {detailsOrder.senderCity} ‚Üí {detailsOrder.receiverCity}</div>
              <div><b>–ê–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è:</b> {detailsOrder.senderAddress}</div>
              <div><b>–ê–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è:</b> {detailsOrder.receiverAddress}</div>
              <div><b>–¢–µ–ª–µ—Ñ–æ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è:</b> {detailsOrder.senderPhone}</div>
              <div><b>–¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—É—á–∞—Ç–µ–ª—è:</b> {detailsOrder.receiverPhone}</div>
              <div><b>–í–µ—Å:</b> {detailsOrder.weight} –∫–≥</div>
              <div><b>–ì–∞–±–∞—Ä–∏—Ç—ã:</b> {detailsOrder.dimensions?.length} x {detailsOrder.dimensions?.width} x {detailsOrder.dimensions?.height} —Å–º</div>
              <div><b>–û–±—ä—è–≤–ª–µ–Ω–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:</b> {detailsOrder.declaredValue}</div>
              <div><b>–¢–∞—Ä–∏—Ñ:</b> {detailsOrder.tariffType}</div>
              <div><b>–¶–µ–Ω–∞:</b> {detailsOrder.price} —Ç–≥</div>
              <div><b>–£—Å–ª—É–≥–∏:</b>
                <ul>
                  {Object.entries(detailsOrder.extraServices || {}).filter(([k, v]) => v.selected).map(([k, v]) => (
                    <li key={k}>{serviceLabels[k] || k} {v.price ? `(+${v.price} —Ç–≥)` : ''}</li>
                  ))}
                </ul>
              </div>
              <h5>–ò—Å—Ç–æ—Ä–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤</h5>
              <ul>
                {(detailsOrder.statusHistory || []).map((s, idx) => (
                  <li key={idx}>
                    <b>{s.status}</b> ‚Äî {s.city || ''} {s.location ? `(${s.location})` : ''} {s.comment && `‚Äî ${s.comment}`} <i>{new Date(s.date).toLocaleString()}</i>
                  </li>
                ))}
              </ul>
            </div>
          )}
        </Modal.Body>
        <Modal.Footer>
          <Button variant="secondary" onClick={() => setShowDetails(false)}>–ó–∞–∫—Ä—ã—Ç—å</Button>
        </Modal.Footer>
      </Modal>
    </Card>
  );
}

export default OrderList