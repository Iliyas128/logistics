import axios from 'axios'
import React, { useState } from 'react'
import { FaWeight, FaMapMarkerAlt, FaCalculator } from 'react-icons/fa'
import './Calculator.scss'

const cityList = [
	'–ê–ª–º–∞—Ç—ã',
	'–ö–∞—Ä–∞–≥–∞–Ω–¥–∞',
	'–ü–∞–≤–ª–æ–¥–∞—Ä',
	'–ö–æ—Å—Ç–∞–Ω–∞–π',
	'–ö–æ–∫—à–µ—Ç–∞—É',
	'–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫',
	'–û—Å–∫–µ–º–µ–Ω',
	'–°–µ–º–µ–π',
	'–ï–∫–∏–±–∞—Å—Ç—É–∑',
	'–ê—Ç–±–∞—Å–∞—Ä',
	'–°—Ç–µ–ø–Ω–æ–≥–æ—Ä—Å–∫',
	'–¢–∞—Ä–∞–∑',
	'–®—ã–º–∫–µ–Ω—Ç',
	'–¢—É—Ä–∫–µ—Å—Ç–∞–Ω',
	'–ö—ã–∑—ã–ª–æ—Ä–¥–∞',
	'–ê–∫—Ç–∞—É',
	'–ê—Ç—ã—Ä–∞—É',
	'–£—Ä–∞–ª—å—Å–∫',
	'–ê–∫—Ç–æ–±–µ',
	'–ñ–µ–∑–∫–∞–∑–≥–∞–Ω',
	'–¢–∞–ª–¥—ã–∫–æ—Ä–≥–∞–Ω',
	'–ê–∫—Å–∞–π',
	'–ê–∫—Å—É',
	'–ñ–∞–Ω–∞–æ–∑–µ–Ω',
	'–†—É–¥–Ω—ã–π',
]

const Calculator = () => {
	const [formData, setFormData] = useState({
		weight: '',
		dimensions: { length: '', width: '', height: '' },
		to: '',
		tariffType: 'EXPRESS',
		deliveryRange: '', // 'in_city' –∏–ª–∏ 'outside_city'
		deliveryMethod: '', // 'door_to_door' –∏–ª–∏ 'door_to_postamat'

		extraServices: {
			insurance: false,
			personalDelivery: false,
			redirection: false,
			fragile: false,
			industrialArea: false,
			bubbleWrap: false,
			stretchWrap: false,
			plywoodBox: false,
			woodenFrame: false,
			addressChange: false,
			deliveryNoticeOriginal: false,
			deliveryNoticeScan: false,
			extraDeliveryAttempt: false,
			courierWaitTruck: false,
			courierWaitCar: false,
		},
	})

	const [result, setResult] = useState(null)
	const [error, setError] = useState(null)
	const [citySuggestions, setCitySuggestions] = useState([])
	const [activeField, setActiveField] = useState(null)
	const [showExtraServices, setShowExtraServices] = useState(false)

	const handleInputChange = e => {
		const { name, value } = e.target

		if (name.includes('dimensions.')) {
			const dimension = name.split('.')[1]
			const cleaned = value.replace(/[^0-9.]/g, '') // —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –∏ —Ç–æ—á–∫–∞

			// –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç–æ—á–∫–∏
			if ((cleaned.match(/\./g) || []).length > 1) return

			setFormData(prev => ({
				...prev,
				dimensions: {
					...prev.dimensions,
					[dimension]: cleaned,
				},
			}))
			return
		}
		if (name === 'weight') {
			const cleaned = value.replace(/[^0-9.]/g, '') // —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –∏ —Ç–æ—á–∫–∞
			if ((cleaned.match(/\./g) || []).length > 1) return

			setFormData(prev => ({
				...prev,
				weight: cleaned,
			}))
			return
		}

		if (name.startsWith('extraServices.')) {
			const service = name.split('.')[1]
			setFormData(prev => ({
				...prev,
				extraServices: {
					...prev.extraServices,
					[service]: e.target.checked,
				},
			}))
			return
		}

		if (name === 'to') {
			const valueLower = value.toLowerCase()
			const filtered = cityList.filter(city =>
				city.toLowerCase().startsWith(valueLower)
			)
			setCitySuggestions(filtered)
			setActiveField(name)

			setFormData(prev => ({ ...prev, [name]: value }))
			return
		}
		if (name === 'deliveryRange') {
			setFormData(prev => ({
				...prev,
				deliveryRange: value,
				deliveryMethod: '',
			}))
			return
		}
		if (name === 'tariffType') {
			setFormData(prev => ({
				...prev,
				tariffType: value,
				deliveryRange: '', // —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–æ–Ω—É
				deliveryMethod: '', // —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–ø–æ—Å–æ–±
				to: value === 'LOCAL' ? '' : prev.to, // –µ—Å–ª–∏ LOCAL ‚Äî –æ—á–∏—â–∞–µ–º "–∫—É–¥–∞"
			}))
			return
		}

		setFormData(prev => ({
			...prev,
			[name]: name === 'weight' ? Number(value) : value,
		}))
	}

	const handleCitySelect = city => {
		setFormData(prev => ({ ...prev, [activeField]: city }))
		setCitySuggestions([])
	}

	const handleSubmit = async e => {
		e.preventDefault()
		console.log('Sending formData:', formData)
		try {
			const response = await axios.post(
				'http://localhost:5000/api/calc/calculate',
				{ ...formData, from: '–ê—Å—Ç–∞–Ω–∞' }
			)
			console.log('Server response:', response.data)
			setResult(response.data)
			setError(null)
		} catch (err) {
			console.error('Calc error:', err.response?.data || err.message)
			setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á—ë—Ç–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ.')
			setResult(null)
		}
	}

	return (
		<div className='calculator-page'>
			<div className='calculator-container'>
				<div className='calculator-header'>
					<FaCalculator className='calculator-icon' />
					<h1>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏</h1>
					<p>–†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤–∞—à–µ–π –ø–æ—Å—ã–ª–∫–∏</p>
				</div>

				<form onSubmit={handleSubmit} className='calculator-form'>
					<div className='form-group'>
						<label>
							<FaWeight className='input-icon' /> –í–µ—Å –ø–æ—Å—ã–ª–∫–∏ (–∫–≥)
						</label>
						<input
							type='text'
							inputMode='decimal' // –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –∏ —Ç–æ—á–∫—É –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
							name='weight'
							value={formData.weight}
							onChange={handleInputChange}
							placeholder='–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å'
							required
						/>
					</div>

					<div className='dimensions-group'>
						<h3>–ì–∞–±–∞—Ä–∏—Ç—ã –ø–æ—Å—ã–ª–∫–∏ (—Å–º)</h3>
						<div className='dimensions-inputs'>
							{['length', 'width', 'height'].map(dim => (
								<div className='form-group' key={dim}>
									<label>
										{dim === 'length'
											? '–î–ª–∏–Ω–∞'
											: dim === 'width'
											? '–®–∏—Ä–∏–Ω–∞'
											: '–í—ã—Å–æ—Ç–∞'}
									</label>
									<input
										type='text'
										inputMode='decimal' // –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã –∏ —Ç–æ—á–∫—É –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
										name={`dimensions.${dim}`}
										value={formData.dimensions[dim]}
										onChange={handleInputChange}
										placeholder={dim}
										required
									/>
								</div>
							))}
						</div>
					</div>

					<div className='locations-group'>
						{formData.tariffType !== 'LOCAL' && (
							<div className='form-group'>
								<label>
									<FaMapMarkerAlt className='input-icon' /> –ö—É–¥–∞
								</label>
								<input
									type='text'
									name='to'
									value={formData.to}
									onChange={handleInputChange}
									onFocus={() => {
										setCitySuggestions(cityList)
										setActiveField('to')
									}}
									placeholder='–ì–æ—Ä–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è'
									autoComplete='off'
									required
								/>
								{activeField === 'to' && citySuggestions.length > 0 && (
									<ul className='city-suggestions'>
										{citySuggestions.map(city => (
											<li key={city} onClick={() => handleCitySelect(city)}>
												{city}
											</li>
										))}
									</ul>
								)}
							</div>
						)}
					</div>

					<div className='form-group extra-services'>
						<h4
							className='toggle-extra-title'
							onClick={() => setShowExtraServices(prev => !prev)}
						>
							{showExtraServices
								? '‚ûñ –°–∫—Ä—ã—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏'
								: '‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏'}
						</h4>

						{showExtraServices && (
							<div className='extra-options'>
								{[
									{ key: 'insurance', label: '–°—Ç—Ä–∞—Ö–æ–≤–∫–∞ (+1%)' },
									{ key: 'personalDelivery', label: '–í—Ä—É—á–µ–Ω–∏–µ –ª–∏—á–Ω–æ (+50%)' },
									{ key: 'redirection', label: '–ü–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—è (+750 —Ç–≥)' },
									{ key: 'fragile', label: '–•—Ä—É–ø–∫–∏–π/–°—Ç–µ–∫–ª–æ (+50%)' },
									{
										key: 'industrialArea',
										label:
											'–î–æ—Å—Ç–∞–≤–∫–∞ –≤ –ø—Ä–∏–≥–æ—Ä–æ–¥/–ø—Ä–æ–º–∑–æ–Ω—É/–ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã (+50%)',
									},
									{
										key: 'bubbleWrap',
										label: '–í–æ–∑–¥—É—à–Ω–æ –ø—É–∑—ã—Ä—á–∞—Ç–∞—è –ø–ª–µ–Ω–∫–∞ (600 —Ç–≥/–º¬≤)',
									},
									{
										key: 'stretchWrap',
										label: '–û–±–º–æ—Ç–∫–∞ —Å—Ç—Ä–µ–π—á –ø–ª–µ–Ω–∫–æ–π (250 —Ç–≥/–º¬≤)',
									},
									{ key: 'plywoodBox', label: '–§–∞–Ω–µ—Ä–Ω—ã–π —è—â–∏–∫ (30 000 —Ç–≥)' },
									{
										key: 'woodenFrame',
										label: '–î–µ—Ä–µ–≤—è–Ω–Ω–∞—è –æ–±—Ä–µ—à–µ—Ç–∫–∞ (18 000 —Ç–≥/–º¬≥)',
									},
									{
										key: 'specialPackaging',
										label: '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —É–ø–∞–∫–æ–≤–∫–∞ (–ø–µ–Ω–æ–ø–ª–∞—Å—Ç –∏ —Ç.–ø.)',
									},
									{
										key: 'addressChange',
										label: '–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (–∞–¥—Ä–µ—Å –≤ –†–ö) ‚Äì 750 —Ç–≥',
									},
									{
										key: 'deliveryNoticeOriginal',
										label: '–û—Ä–∏–≥–∏–Ω–∞–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ‚Äì 600 —Ç–≥',
									},
									{
										key: 'deliveryNoticeScan',
										label: '–°–∫–∞–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ‚Äì 200 —Ç–≥',
									},
									{
										key: 'extraDeliveryAttempt',
										label: '–î–æ–ø. –ø–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ ‚Äì 750 —Ç–≥',
									},
									{
										key: 'courierWaitTruck',
										label: '–û–∂–∏–¥–∞–Ω–∏–µ –≥—Ä—É–∑–æ–≤–∏–∫–∞ (5500 —Ç–≥)',
									},
									{
										key: 'courierWaitCar',
										label: '–û–∂–∏–¥–∞–Ω–∏–µ –ª–µ–≥–∫–æ–≤–æ–≥–æ (2000 —Ç–≥)',
									},
								].map(opt => (
									<div key={opt.key}>
										<label>
											<input
												type='checkbox'
												name={`extraServices.${opt.key}`}
												checked={formData.extraServices[opt.key] || false}
												onChange={handleInputChange}
											/>
											{opt.label}
										</label>
									</div>
								))}
							</div>
						)}
					</div>

					<div className='form-group'>
						<label>üìò –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–∞—Å—á—ë—Ç—É</label>
						<a
							href='/docs/–¢–∞—Ä–∏—Ñ—ã SHM Express.docx'
							target='_blank'
							rel='noopener noreferrer'
							className='info-link'
						>
							–û—Ç–∫—Ä—ã—Ç—å PDF
						</a>
					</div>

					<div className='form-group'>
						<label htmlFor='tariffType'>–¢–∏–ø —Ç–∞—Ä–∏—Ñ–∞</label>
						<select
							name='tariffType'
							value={formData.tariffType}
							onChange={handleInputChange}
							required
						>
							<option value='EXPRESS'>EXPRESS (–æ–±—ã—á–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞)</option>
							<option value='PRIME'>PRIME (—Å—Ä–æ—á–Ω–∞—è –∞–≤–∏–∞–¥–æ—Å—Ç–∞–≤–∫–∞)</option>
							<option value='LOCAL'>LOCAL (–ø–æ –≥–æ—Ä–æ–¥—É)</option>
						</select>
					</div>
					{formData.tariffType === 'LOCAL' && (
						<div className='form-group'>
							<label>–ó–æ–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è LOCAL)</label>
							<select
								name='deliveryRange'
								value={formData.deliveryRange}
								onChange={handleInputChange}
								required
							>
								<option value=''>–í—ã–±–µ—Ä–∏—Ç–µ –∑–æ–Ω—É</option>
								<option value='in_city'>–í –ø—Ä–µ–¥–µ–ª–∞—Ö –≥–æ—Ä–æ–¥–∞</option>
								<option value='outside_city'>–î–æ 50 –∫–º –æ—Ç –≥–æ—Ä–æ–¥–∞</option>
							</select>
						</div>
					)}
					{result?.notes?.length > 0 && (
						<div className='info-card'>
							<h4>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è:</h4>
							<ul>
								{result.notes.map((note, idx) => (
									<li key={idx}>{note}</li>
								))}
							</ul>
						</div>
					)}

					{formData.deliveryRange === 'in_city' && (
						<div className='form-group'>
							<label>–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏</label>
							<select
								name='deliveryMethod'
								value={formData.deliveryMethod}
								onChange={handleInputChange}
								required
							>
								<option value=''>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–±</option>
								<option value='door_to_door'>–î–≤–µ—Ä—å ‚Äî –î–≤–µ—Ä—å</option>
								<option value='door_to_postamat'>–î–≤–µ—Ä—å ‚Äî –ü–æ—Å—Ç–∞–º–∞—Ç</option>
							</select>
						</div>
					)}
					{formData.deliveryRange === 'outside_city' && (
						<input type='hidden' name='deliveryMethod' value='door_to_door' />
					)}

					<button type='submit' className='calculate-button'>
						–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å
					</button>
				</form>

				{result && (
					<div className='result-card'>
						<h3>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞:</h3>
						<p>
							üì¶ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏: <strong>{result.price} —Ç–≥</strong>
						</p>
						<p>‚öñ –†–∞—Å—á—ë—Ç–Ω—ã–π –≤–µ—Å: {result.chargeableWeight.toFixed(2)} –∫–≥</p>
						<p>üó∫ –¢–∞—Ä–∏—Ñ–Ω–∞—è –∑–æ–Ω–∞: {result.zone}</p>
					</div>
				)}

				{error && (
					<div className='error-message'>
						<p>{error}</p>
					</div>
				)}

				<div className='calculator-info'>
					<div className='info-card'>
						<h3>–ö–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Å—Ç–æ–∏–º–æ—Å—Ç—å?</h3>
						<p>
							–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–µ—Å–∞, –≥–∞–±–∞—Ä–∏—Ç–æ–≤ (–æ–±—ä—ë–º–Ω–æ–≥–æ –≤–µ—Å–∞) –∏
							—Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è. –û–±—ä—ë–º–Ω—ã–π –≤–µ—Å = –î–ª–∏–Ω–∞ √ó –®–∏—Ä–∏–Ω–∞ √ó –í—ã—Å–æ—Ç–∞ / 5000
						</p>
					</div>
					<div className='info-card'>
						<h3>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏</h3>
						<p>
							–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ, –≤—Ä—É—á–µ–Ω–∏–µ –ª–∏—á–Ω–æ, –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–∞—Ü–∏—é –∏ –¥—Ä.
						</p>
					</div>
				</div>
			</div>
		</div>
	)
}

export default Calculator
